{"version":3,"file":"Button.test.js","sourceRoot":"","sources":["../../../../../../../../../Projects/VPS/lastvp/VPlab5/app/components/button/Button.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { render, screen, fireEvent } from '@testing-library/react';\r\nimport Button from './Button';\r\n\r\ndescribe('Button', () => {\r\n    test('отображает кнопку с текстом', () => {\r\n        render(\r\n          <Button variant=\"primary\" size=\"md\" onClick={() => {}}>\r\n              Нажми меня\r\n          </Button>\r\n        );\r\n        expect(screen.getByText('Нажми меня')).toBeInTheDocument();\r\n    });\r\n\r\n    test('вызывает onClick при клике', () => {\r\n        const handleClick = jest.fn();\r\n        render(\r\n          <Button variant=\"primary\" size=\"md\" onClick={handleClick}>\r\n              Кнопка\r\n          </Button>\r\n        );\r\n        fireEvent.click(screen.getByText('Кнопка'));\r\n        expect(handleClick).toHaveBeenCalledTimes(1);\r\n    });\r\n\r\n    test('кнопка отключена при disabled=true', () => {\r\n        render(\r\n          <Button variant=\"primary\" size=\"md\" disabled onClick={() => {}}>\r\n              Кнопка\r\n          </Button>\r\n        );\r\n        expect(screen.getByText('Кнопка')).toBeDisabled();\r\n    });\r\n\r\n    test('применяет классы вариантов (primary/secondary/danger)', () => {\r\n        const { rerender } = render(\r\n          <Button variant=\"primary\" size=\"md\" onClick={() => {}}>\r\n              Кн\r\n          </Button>\r\n        );\r\n        expect(screen.getByRole('button')).toHaveClass('primary');\r\n\r\n        rerender(\r\n          <Button variant=\"secondary\" size=\"md\" onClick={() => {}}>\r\n              Кн\r\n          </Button>\r\n        );\r\n        expect(screen.getByRole('button')).toHaveClass('secondary');\r\n\r\n        rerender(\r\n          <Button variant=\"danger\" size=\"md\" onClick={() => {}}>\r\n              Кн\r\n          </Button>\r\n        );\r\n        expect(screen.getByRole('button')).toHaveClass('danger');\r\n    });\r\n\r\n    test('применяет классы размеров (sm/md/lg)', () => {\r\n        const { rerender } = render(\r\n          <Button variant=\"primary\" size=\"sm\" onClick={() => {}}>\r\n              Кн\r\n          </Button>\r\n        );\r\n        expect(screen.getByRole('button')).toHaveClass('sm');\r\n\r\n        rerender(\r\n          <Button variant=\"primary\" size=\"md\" onClick={() => {}}>\r\n              Кн\r\n          </Button>\r\n        );\r\n        expect(screen.getByRole('button')).toHaveClass('md');\r\n\r\n        rerender(\r\n          <Button variant=\"primary\" size=\"lg\" onClick={() => {}}>\r\n              Кн\r\n          </Button>\r\n        );\r\n        expect(screen.getByRole('button')).toHaveClass('lg');\r\n    });\r\n\r\n    test('использует правильный type кнопки', () => {\r\n        const { rerender } = render(\r\n          <Button variant=\"primary\" size=\"md\" type=\"submit\" onClick={() => {}}>\r\n              Кн\r\n          </Button>\r\n        );\r\n        expect(screen.getByRole('button')).toHaveAttribute('type', 'submit');\r\n\r\n        rerender(\r\n          <Button variant=\"primary\" size=\"md\" type=\"reset\" onClick={() => {}}>\r\n              Кн\r\n          </Button>\r\n        );\r\n        expect(screen.getByRole('button')).toHaveAttribute('type', 'reset');\r\n    });\r\n\r\n    test('кнопка активна по умолчанию', () => {\r\n        render(\r\n          <Button variant=\"primary\" size=\"md\" onClick={() => {}}>\r\n              Кн\r\n          </Button>\r\n        );\r\n        expect(screen.getByRole('button')).not.toBeDisabled();\r\n    });\r\n});"]}