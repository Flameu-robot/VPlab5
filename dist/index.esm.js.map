{"version":3,"file":"index.esm.js","sources":["../app/components/button/Button.tsx","../app/components/input/Input.tsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nexport interface ButtonProps {\r\n  variant: 'primary' | 'secondary' | 'danger';\r\n  size: 'sm' | 'md' | 'lg';\r\n  disabled?: boolean;\r\n  onClick: () => void;\r\n  children: React.ReactNode;\r\n  type?: 'button' | 'submit' | 'reset';\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\nvariant = 'primary',\r\nsize = 'md',\r\ndisabled = false,\r\nonClick,\r\nchildren,\r\ntype = 'button',}) => {\r\n  const buttonClass = [\r\n    styles.button,\r\n    styles[variant],\r\n    styles[size],\r\n    disabled ? styles.disabled : '',\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <button\r\n      className={buttonClass}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      type={type}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import React, { useState } from 'react';\r\nimport styles from './Input.module.css';\r\n\r\nexport interface InputProps {\r\n  label?: string;\r\n  error?: string;\r\n  helperText?: string;\r\n  required?: boolean;\r\n  placeholder?: string;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  type?: 'text' | 'password' | 'email';\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({\r\nlabel,\r\nerror,\r\nhelperText,\r\nrequired = false,\r\nplaceholder,\r\nvalue,\r\nonChange,\r\ntype = 'text',}) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  const wrapperClasses = [\r\n    styles.inputWrapper,\r\n    error ? styles.error : '',\r\n    isFocused ? styles.focused : '',\r\n  ]\r\n    .filter(Boolean)\r\n    .join(' ');\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {label && (\r\n        <label className={styles.label}>\r\n          {label}\r\n          {required && <span className={styles.required}>*</span>}\r\n        </label>\r\n      )}\r\n      <div className={wrapperClasses}>\r\n        <input\r\n          className={styles.input}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={handleChange}\r\n          onFocus={() => setIsFocused(true)}\r\n          onBlur={() => setIsFocused(false)}\r\n        />\r\n      </div>\r\n      {error && <div className={styles.errorMessage}>{error}</div>}\r\n      {helperText && !error && (\r\n        <div className={styles.helperText}>{helperText}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;"],"names":["Button","variant","size","disabled","onClick","children","type","buttonClass","styles","button","filter","Boolean","join","_jsx","className","Input","label","error","helperText","required","placeholder","value","onChange","isFocused","setIsFocused","useState","wrapperClasses","inputWrapper","focused","_jsxs","container","input","e","target","onFocus","onBlur","errorMessage"],"mappings":"8ZAYA,MAAMA,EAAgC,EACtCC,UAAU,UACVC,OAAO,KACPC,YAAW,EACXC,UACAC,WACAC,OAAO,aACL,MAAMC,EAAc,CAClBC,EAAOC,OACPD,EAAOP,GACPO,EAAON,GACPC,EAAWK,EAAOL,SAAW,IAC7BO,OAAOC,SAASC,KAAK,KAEvB,OACEC,YACEC,UAAWP,EACXH,QAASA,EACTD,SAAUA,EACVG,KAAMA,EAAID,SAETA,uXCnBP,MAAMU,EAA8B,EACpCC,QACAC,QACAC,aACAC,YAAW,EACXC,cACAC,QACAC,WACAhB,OAAO,WACL,MAAOiB,EAAWC,GAAgBC,GAAS,GAMrCC,EAAiB,CACrBlB,EAAOmB,aACPV,EAAQT,EAAOS,MAAQ,GACvBM,EAAYf,EAAOoB,QAAU,IAE5BlB,OAAOC,SACPC,KAAK,KAER,OACEiB,EAAA,MAAA,CAAKf,UAAWN,EAAOsB,UAASzB,SAAA,CAC7BW,GACCa,EAAA,QAAA,CAAOf,UAAWN,EAAOQ,MAAKX,SAAA,CAC3BW,EACAG,GAAYN,EAAA,OAAA,CAAMC,UAAWN,EAAOW,SAAQd,SAAA,SAGjDQ,EAAA,MAAA,CAAKC,UAAWY,EAAcrB,SAC5BQ,EAAA,QAAA,CACEC,UAAWN,EAAOuB,MAClBzB,KAAMA,EACNc,YAAaA,EACbC,MAAOA,EACPC,SA1BcU,IACpBV,EAASU,EAAEC,OAAOZ,QA0BZa,QAAS,IAAMV,GAAa,GAC5BW,OAAQ,IAAMX,GAAa,OAG9BP,GAASJ,EAAA,MAAA,CAAKC,UAAWN,EAAO4B,aAAY/B,SAAGY,IAC/CC,IAAeD,GACdJ,EAAA,MAAA,CAAKC,UAAWN,EAAOU,WAAUb,SAAGa"}